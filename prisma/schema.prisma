// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lang {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  Developer
  Admin
  Employee
  User
}

model Users {
  id       String @id @default(uuid())
  name     String
  surname  String
  email    String @unique
  password String
  roles    Role[] @default([User])
}

model Ads {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BaseCategory {
  id        String   @id @default(uuid())
  nameTm    String
  nameRu    String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([nameTm, nameRu])
}

enum Sections {
  Local
  World
  Video
}

model SportCategories {
  id        String   @id @default(uuid())
  nameTm    String
  nameRu    String
  section   Sections
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  news   News[]
  videos Videos[]

  @@unique([nameTm, nameRu, section])
}

model News {
  id         String          @id @default(uuid())
  textTm     String
  textRu     String
  views      Int             @default(0)
  nameTm     String
  nameRu     String
  locationTm String
  locationRu String
  imagePath  String
  category   SportCategories @relation(fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([nameTm, nameRu])
}

model Videos {
  id         String          @id @default(uuid())
  views      Int             @default(0)
  nameTm     String
  nameRu     String
  textTm     String
  textRu     String
  videoPath  String
  imagePath  String
  category   SportCategories @relation(fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([nameTm, nameRu])
}

model SportTypes {
  id        String   @id @default(uuid())
  nameTm    String
  nameRu    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([nameTm, nameRu])
}

model Federations {
  id        String               @id @default(uuid())
  nameTm    String
  nameRu    String
  imagePath String
  fsports   FederationSports?
  fathlete  FederationAthlete[]
  ftrainers FederationTrainers[]
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt

  @@unique([nameTm, nameRu])
}

model FederationSports {
  id           String      @id @default(uuid())
  tel          String
  fax          String
  web          String
  email        String
  leaderTm     String
  leaderRu     String
  founded      Int
  locationTm   String
  locationRu   String
  presidentTm  String
  presidentRu  String
  federationId String      @unique
  federation   Federations @relation(fields: [federationId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@unique([tel, email])
}

model FederationTrainers {
  id           String      @id @default(uuid())
  rating       Float       @default(4.5)
  experience   Int         @default(0)
  views        Int         @default(0)
  age          Int
  jobTm        String
  jobRu        String
  nameTm       String
  nameRu       String
  madeTm       String
  madeRu       String
  birthPlaceTm String
  birthPlaceRu String
  sportLevelTm String
  sportLevelRu String
  workedAtTm   String[]
  workedAtRu   String[]
  badgesTm     String[]
  badgesRu     String[]
  imagePath    String
  links        Json        @default("{}") @db.Json
  federationId String
  federation   Federations @relation(fields: [federationId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@unique([nameTm, nameRu])
}

model FederationAthlete {
  id           String      @id @default(uuid())
  jobTm        String
  jobRu        String
  age          Int
  club         String
  views        Int         @default(0)
  links        Json        @default("{}") @db.Json
  nameTm       String
  nameRu       String
  madeTm       String
  madeRu       String
  rating       Float       @default(4.5)
  imagePath    String
  positionTm   String
  positionRu   String
  experience   Int         @default(0)
  birthPlaceTm String
  birthPlaceRu String
  sportLevelTm String
  sportLevelRu String
  workedAtTm   String[]
  workedAtRu   String[]
  badgesTm     String[]
  badgesRu     String[]
  federationId String
  federation   Federations @relation(fields: [federationId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@unique([nameTm, nameRu])
}

model FederationGymsAndClubs {
  id         String   @id @default(uuid())
  nameTm     String
  nameRu     String
  locationTm String
  locationRu String
  email      String
  link       String
  latitude   Float
  longitude  Float
  tel        String[]
  sportsTm   String[]
  sportsRu   String[]
  openAtTm   String[]
  openAtRu   String[]
  imagePath1 String
  imagePath2 String
  imagePath3 String
  imagePath4 String
  imagePath5 String
  views      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([nameTm, nameRu])
}

model HealthCareDepartments {
  id        String                          @id @default(uuid())
  nameTm    String
  nameRu    String
  employees FederationHealthCareEmployees[]
  createdAt DateTime                        @default(now())
  updatedAt DateTime                        @updatedAt

  @@unique([nameTm, nameRu])
}

model FederationHealthCareEmployees {
  id           String                @id @default(uuid())
  nameTm       String
  nameRu       String
  jobTm        String
  jobRu        String
  age          Int
  workAtTm     String
  workAtRu     String
  experience   Int                   @default(0)
  views        Int                   @default(0)
  rating       Float                 @default(4.5)
  links        Json                  @default("{}") @db.Json
  imagePath    String
  departmentId String
  department   HealthCareDepartments @relation(fields: [departmentId], references: [id])
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt

  @@unique([nameTm, nameRu])
}

model CompetitionTypes {
  id          Int            @id @default(autoincrement())
  nameTm      String
  nameRu      String
  competition Competitions[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@unique([nameRu, nameTm])
}

model Competitions {
  id              String           @id @default(uuid())
  nameTm          String
  nameRu          String
  textTm          String
  textRu          String
  locationTm      String
  locationRu      String
  dateStart       DateTime
  dateEnd         DateTime
  views           Int              @default(0)
  imagePath       String
  competitionType CompetitionTypes @relation(fields: [typeId], references: [id])
  typeId          Int
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@unique([nameTm, nameRu])
}

model ShopCategories {
  id             String           @id @default(uuid())
  nameTm         String
  nameRu         String
  parentId       String           @default("0")
  parentCategory ShopCategories   @relation("InfinteShopCategory", fields: [parentId], references: [id])
  shopCategory   ShopCategories[] @relation("InfinteShopCategory")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@unique([nameTm, nameRu, parentId])
}

model Brands {
  id        String   @id @default(uuid())
  nameTm    String
  nameRu    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
