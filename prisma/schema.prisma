// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lang {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Users {
  id       String @id @default(uuid())
  name     String
  surname  String
  email    String @unique
  password String
}

model Ads {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BaseCategory {
  id        String   @id @default(uuid())
  nameTm    String
  nameRu    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([nameTm, nameRu])
}

enum Sections {
  Local
  World
  Video
}

model SportCategories {
  id        String   @id @default(uuid())
  nameTm    String
  nameRu    String
  section   Sections
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  news   News[]
  videos Videos[]

  @@unique([nameTm, nameRu, section])
}

model News {
  id         String          @id @default(uuid())
  textTm     String
  textRu     String
  views      Int             @default(0)
  nameTm     String
  nameRu     String
  location   String
  imagePath  String
  category   SportCategories @relation(fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([nameTm, nameRu])
}

model Videos {
  id         String          @id @default(uuid())
  views      Int             @default(0)
  nameTm     String
  nameRu     String
  videoPath  String
  imagePath  String
  category   SportCategories @relation(fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([nameTm, nameRu])
}

model Federations {
  id        String              @id @default(uuid())
  nameTm    String
  nameRu    String
  fsports   FederationSports?
  fathlete  FederationAthlete?
  ftrainers FederationTrainers?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@unique([nameTm, nameRu])
}

model FederationSports {
  id           String      @id @default(uuid())
  tel          String
  fax          String
  web          String
  email        String
  leader       String
  founded      String
  location     String
  president    String
  federationId String      @unique
  federation   Federations @relation(fields: [federationId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@unique([tel, email])
}

model FederationTrainers {
  id           String      @id @default(uuid())
  age          Int
  job          String
  name         String      @unique
  made         String
  rating       Float       @default(4.5)
  imagePath    String
  experience   Int         @default(0)
  views        Int         @default(0)
  birthPlace   String
  sportLevel   String
  workedAt     String[]
  badges       String[]
  links        Json?       @db.Json
  federationId String      @unique
  federation   Federations @relation(fields: [federationId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model FederationAthlete {
  id           String      @id @default(uuid())
  name         String      @unique
  club         String?
  made         String
  rating       Float       @default(4.5)
  position     String?
  imagePath    String
  age          Int
  birthPlace   String
  views        Int         @default(0)
  experience   Int         @default(0)
  sportLevel   String
  workedAt     String[]
  badges       String[]
  links        Json        @default("{}") @db.Json
  federationId String      @unique
  federation   Federations @relation(fields: [federationId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model FederationGymsAndClubs {
  id         String   @id @default(uuid())
  nameTm     String
  nameRu     String
  locationTm String
  locationRu String?
  email      String?
  link       String?
  views      Int      @default(0)
  latitude   Float
  longitude  Float
  tel        String[]
  sportsTm   String[]
  sportsRu   String[]
  openAtTm   String[]
  openAtRu   String[]
  imagePath1 String
  imagePath2 String   @default("")
  imagePath3 String   @default("")
  imagePath4 String   @default("")
  imagePath5 String   @default("")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([nameTm, nameRu])
}

model HealthCareDepartments {
  id        String                          @id @default(uuid())
  nameTm    String
  nameRu    String
  employees FederationHealthCareEmployees[]
  createdAt DateTime                        @default(now())
  updatedAt DateTime                        @updatedAt

  @@unique([nameTm, nameRu])
}

model FederationHealthCareEmployees {
  id           String                @id @default(uuid())
  name         String
  job          String
  age          Int
  workAt       String
  departmentId String
  department   HealthCareDepartments @relation(fields: [departmentId], references: [id])
  experience   Int                   @default(0)
  views        Int                   @default(0)
  rating       Float                 @default(4.5)
  imagePath    String
  links        Json                  @default("{}") @db.Json
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt

  @@unique([name, job])
}

model CompetitionTypes {
  id          Int            @id @default(autoincrement())
  nameTm      String
  nameRu      String
  competition Competitions[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@unique([nameRu, nameTm])
}

model Competitions {
  id              String           @id @default(uuid())
  nameTm          String
  nameRu          String
  textTm          String
  textRu          String
  location        String
  dateStart       DateTime
  dateEnd         DateTime
  views           Int              @default(0)
  imagePath       String
  competitionType CompetitionTypes @relation(fields: [typeId], references: [id])
  typeId          Int
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@unique([nameTm, nameRu])
}

model ShopCategories {
  id             String           @id @default(uuid())
  nameTm         String
  nameRu         String
  parentId       String           @default("0")
  parentCategory ShopCategories   @relation("InfinteShopCategory", fields: [parentId], references: [id])
  shopCategory   ShopCategories[] @relation("InfinteShopCategory")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@unique([nameTm, nameRu])
}
